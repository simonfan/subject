//     subject
//     (c) simonfan
//     subject is licensed under the MIT terms.

define("subject",["require","exports","module","lodash"],function(e){function t(e,t,o){return o?(r.defaults(o,n),r.each(t,function(t,n){var u=r.extend({value:t},o);Object.defineProperty(e,n,u)}),e):r.extend(e,t)}var r=e("lodash"),n={configurable:!0,writable:!0,enumerable:!0},o={};t(o,{initialize:function(){}},{enumerable:!1});var u=function(){};return u.prototype=o,t(u,{proto:function(){var e,n;return r.isObject(arguments[0])?(e=arguments[0],n=arguments[1]):(e={}[arguments[0]]=arguments[1],n=arguments[2]),t(this.prototype,e,n),this},protoMerge:function(){var e,n,o;if(r.isString(arguments[0])){var u=arguments[0];e=this.prototype[u],n=arguments[1],o=arguments[2],this.prototype[u]=t(r.create(e),n,o)}else o=arguments[1],r.each(arguments[0],r.bind(function(e,t){this.protoMerge(t,e,o)},this));return this},extend:function(e,n){var o,u=this;return o=function(){var e=Object.create(o.prototype);return e.initialize.apply(e,arguments),e},t(o,r.pick(u,["proto","protoMerge","extend"]),{enumerable:!1}),o.prototype=Object.create(u.prototype),o.proto(e,n),t(o,{constructor:o,__super__:u.prototype},{enumerable:!1}),o}},{enumerable:!1}),u.extend.bind(u)});